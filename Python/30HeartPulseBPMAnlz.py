from socketIO_client import SocketIO, LoggingNamespace

import math

#socketIO = SocketIO('localhost',1337,LoggingNamespace)
socketIO = SocketIO('https://ipet-project-server.herokuapp.com/socket.io/')

pulA = [58,59,61,60,58,60,61,61,58,58,61,66,63,60,63,61,61,59,59,57,61,62,57,56,55,57,57,54,56,59,57,58,60,58,60,57,58,61,60,61,57,61,58,59,60,61,61,60,61,60,61,59,60,61,63,60,61,71,63,52,51,49,51,51,40,40,41,39,43,48,55,61,59,57,58,53,54,61,62,61,61,61,61,63,64,64,64,66,66,66,66,69,67,66,66,66,65,63,63,66,69,68,66,65,65,66,63,63,64,62,65,65,63,62,66,70,70,70,68,69,74,74,71,69,70,71,70,68,69,69,75,73,70,71,71,71,69,67,70,74,74,74,70,71,71,69,66,66,69,74,74,71,71,69,66,63,63,66,71,74,73,72,71,71,67,66,66,66,69,74,75,74,74,71,71,67,68,67,69,76,77]
pulB = [67,67,69,75,75,73,71,73,73,66,59,57,58,63,67,66,63,63,64,61,58,58,59,66,67,65,62,63,63,63,59,59,63,71,69,63,63,62,61,61,59,61,69,66,62,63,63,61,61,59,62,68,69,64,61,63,66,61,58,59,69,69,66,63,62,65,61,63,66,71,70,64,69,65,65,62,59,68,72,73,69,62,60,61,61,63,70,73,71,70,74,70,64,63,64,66,61,56,55,57,60,61,56,54,63,63,54,54,58,54,53,62,74,67,72,69,64,55,53,59,69,63,56,59,60,56,46,60,61,63,66,68,62,60,56,58,63,59,57,64,76,76,66,59,63,63,60,62,58,56,58,61,63,63,61,56,58,55,57,67,0,85,5,30,51,66,54,33,31,36,33,34,40,47,58,58,46,39,46,51,50]
pulC = [60,59,66,69,66,64,63,63,65,62,66,66,58,56,58,59,58,58,58,61,62,58,58,61,61,61,58,57,63,66,63,65,63,61,60,61,63,66,66,63,63,63,63,63,63,63,63,64,67,69,69,70,70,67,67,68,69,69,69,69,67,67,67,69,68,62,63,66,69,72,69,67,70,68,68,66,67,69,73,74,69,69,69,69,69,66,71,76,75,71,71,70,69,67,66,67,69,67,69,71,71,67,66,66,71,71,65,70,71,71,66,63,63,69,74,75,74,69,68,66,68,66,74,80,69,67,62,58,57,63,69,75,70,63,63,64,64,63,63,68,70,71,63,63,67,69,69,73,76,74,68,62,63,62,58,54,54,56,63,65,66,71,70,66,63,64,68,68,74,75,71,71,71,69,63,61,59,59,64,68,63]
pulD = [41,40,41,40,27,41,53,58,61,64,61,71,65,63,61,65,53,51,51,52,66,53,62,58,52,62,56,66,69,71,52,66,61,66,59,61,62,61,69,73,69,61,64,61,49,51,55,67,51,56,58,63,59,52,69,57,57,61,71,78,66,65,59,57,69,86,86,81,74,74,73,62,57,76,74,82,81,84,88,83,71,68,66,74,75,73,68,64,66,64,60,46,45,53,55,53,49,59,63,63,62,58,62,61,59,58,65,69,65,61,62,68,69,66,64,63,68,66,69,69,69,63,61,61,66,69,71,69,66,69,69,66,64,64,66,66,64,63,67,73,72,71,71,67,61,58,61,61,63,61,62,61,66,61,63,76,76,66,59,57,53,56,56,57,66,71,65,59,59,56,53,54,55,58,63,66,62,59,61,59,56]
pulE = [56,56,66,56,58,60,63,69,68,62,60,66,61,61,63,62,61,63,61,66,69,70,64,65,66,65,60,56,61,74,70,62,65,61,56,65,79,74,73,68,55,54,60,63,66,74,77,74,71,73,66,69,72,71,82,71,75,83,81,73,64,67,69,63,74,72,64,62,80,76,61,78,76,69,87,91,1,1,76,67,67,63,66,73,60,60,71,67,55,48,66,69,77,58,50,61,74,71,66,63,33,38,65,74,73,69,58,67,66,64,69,74,63,52,47,44,61,66,63,69,77,65,51,53,52,67,64,58,66,73,69,58,56,51,49,48,61,71,58,46,59,69,63,58,63,66,51,51,58,61,65,69,73,70,67,63,61,64,65,63,66,69,63,63,65,61,59,59,68,69,66,62,58,52,53,65,81,78,61,51,56]
pulF = [71,70,56,49,47,56,52,45,58,69,71,65,60,57,69,81,81,65,51,53,48,48,56,54,57,60,64,71,71,68,63,60,66,67,67,56,51,56,68,81,76,69,63,73,81,76,81,76,63,56,53,61,64,74,73,63,60,54,53,55,53,61,69,64,57,56,51,45,46,56,65,72,74,66,71,74,66,60,62,64,73,82,75,73,75,71,69,68,64,71,74,71,69,69,63,58,56,61,68,59,49,47,46,46,52,54,51,56,54,53,56,54,53,56,58,57,61,56,51,56,50,46,55,58,69,74,65,62,62,68,61,59,61,69,62,57,56,54,56,58,59,56,63,66,66,66,66,62,54,51,58,67,66,63,59,57,59,60,62,66,66,61,63,64,66,63,62,61,66,65,65,63,63,58,55,53,58,58,61,63,61]
pulR = [54,55,59,64,64,61,61,57,53,53,57,63,66,63,60,60,61,61,59,58,59,65,66,63,61,62,61,58,59,62,66,68,63,63,61,57,58,61,64,70,69,64,62,61,72,86,88,81,82,88,80,67,61,66,70,65,68,75,78,74,66,67,69,67,62,61,64,75,82,76,70,71,69,67,66,64,61,63,73,75,66,57,54,53,53,48,45,47,58,61,55,51,53,58,58,59,59,63,66,63,62,63,63,61,61,58,59,66,66,62,61,62,58,59,59,58,63,66,63,61,61,61,61,59,58,59,65,69,67,63,63,61,59,57,58,59,63,66,63,60,59,58,59,59,58,62,68,63,60,60,60,61,61,62,62,66,65,63,63,63,61,61,59,67,69,65,63,65,63,60,61,62,71,75,71,64,58,62,64,60,56]
pulW = [61,61,63,69,64,69,68,69,74,69,60,56,58,69,70,66,64,63,63,61,54,62,61,68,71,56,64,69,69,65,59,58,63,63,61,65,61,56,53,59,70,73,61,56,59,57,57,56,65,68,63,64,58,65,63,61,62,63,55,58,64,67,63,58,60,66,56,48,53,61,61,65,64,69,63,64,58,69,61,69,57,58,53,63,56,63,61,67,76,79,75,74,75,74,75,72,76,82,80,74,74,68,64,65,75,76,74,73,69,66,66,64,77,81,76,65,51,49,56,65,76,75,74,79,84,81,71,71,69,71,90,1,79,71,74,71,65,61,69,69,71,77,79,74,76,72,56,49,47,45,48,59,69,64,63,62,61,60,56,56,58,62,62,62,56,56,51,48,41,47,62,68,64,59,60,58,55,56,56,68,81]
pulM = [71,71,84,89,82,76,76,70,65,67,67,77,81,74,61,63,63,53,51,50,57,71,69,63,61,61,58,61,61,58,65,66,61,58,55,45,40,47,60,80,82,70,72,71,70,67,59,64,85,81,68,61,62,61,58,58,85,78,56,51,56,61,63,57,44,56,77,74,65,63,66,61,53,50,60,67,69,67,62,50,43,47,63,82,79,68,63,62,62,59,59,71,76,73,73,73,71,62,58,61,79,79,69,67,64,57,52,52,67,70,59,54,53,53,56,58,61,55,45,42,50,51,54,55,59,74,67,46,41,56,70,71,61,56,69,69,62,56,57,57,60,58,64,84,87,60,60,84,80,43,31,44,82,1,1,69,60,63,67,71,67,66,84,84,69,59,53,50,51,56,64,77,74,66,66,66,48,42,51,72,1]
pulZ = [58,56,47,51,55,61,61,47,46,48,61,74,65,58,58,58,55,54,56,71,75,63,66,63,58,56,56,73,80,69,61,64,58,62,80,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,82,80,74,74,73,71,76,72,69,67,68,68,64,63,66,65,64,65,66,66,65,65,66,65,65,66,65,65,66,66,66,65,66,65,66,65,66,64,65,64,65,66,66,66,65,65,64,64,64,66,64,65,65,66,65,64,64,65,64,64,65,64,64,63,64,65,64,65,65,64,65,66,65,66,65,64,65,65,65,65,64,65,64,65,65,64,64,63,63,63,63,63,65,64,63,62,63,63,63,65,63,63,64,63,63,65]
#__________________________________________off____________________________________________#
pulOFF = [63,64,63,65,65,65,63,63,63,63,64,65,63,63,63,63,63,64,63,64,64,63,63,64,63,63,63,63,64,63,63,64,64,65,72,66,62,63,60,63,65,64,63,62,63,63,64,64,64,63,64,65,63,63,63,63,64,63,63,65,64,65,64,64,63,64,64,65,64,64,63,63,64,63,63,64,63,63,63,63,65,65,64,64,63,63,63,64,65,63,64,66,63,63,63,63,64,66,67,89,1,83,56,53,48,54,62,0,75,0,21,71,69,63,62,63,63,63,63,63,63,63,63,63,63,62,63,64,63,65,65,66,67,66,64,63,64,64,63,63,63,63,63,64,63,63,63,63,63,63,63,63,63,63,63,63,63,62,63,62,62,61,63,63,63,63,63,63,63,63,63,63,63,63,64,63,63,63,63,63,64]

pulALL = [pulA,pulB,pulC,pulD,pulE,pulF,pulR,pulW,pulM,pulZ,pulOFF]

def Normilize_Array(array):
    count = 0
    for i in range(len(array)):
        if ((array[i] > 2) and (array[i] < 90)):
            count += 1
    temp = [0 for k in range(count)]
    c = 0
    for i in range(len(array)):
        if (array[i] > 2) and (array[i] < 90):
            temp[c] = array[i]
            c += 1
    return temp

def I_startRise(i,array):
    sum_ = 0
    s = i
    e = i
    verdict = 'no'
    if i+2 < len(array):
        if (array[i] < array[i+1]) and (array[i+1] < array[i+2]):
            sum_ += array[i+1]-array[i]
            sum_ += array[i+2]-array[i+1]
            verdict = 'yes'
            e = i+2
        else:
            if (array[i] < array[i+1]):
                sum_ += array[i+1]-array[i]
                e = i+2
                verdict = 'yes'
    return [s,e,sum_,verdict]

def I_startFall(i,array):
    sum_ = 0
    s = i
    e = i
    verdict = 'no'
    if i+1 >= len(array):
        return [s, e, sum_, verdict]
    if math.floor(array[i]) == math.floor(array[i+1]):
        i += 1
    if i+2 < len(array):
        if (array[i] > array[i+1]) and (array[i+1] > array[i+2]):
            sum_ += array[i+1]-array[i]
            sum_ += array[i+2]-array[i+1]
            verdict = 'yes'
            e = i+2
        else:
            if (array[i] > array[i+1]):
                sum_ += array[i+1]-array[i]
                e = i+2
                verdict = 'yes'
    return [s,e,sum_,verdict]

def I_reversePulse(i,array):
    verdict = 'no'
    s = i
    e = i
    if i+2 < len(array):
        temp = array[i]-array[i+1]
        if temp >= 35:
            j = i+1
            k = i+5
            while j < k:
                j += 1
                tmp = array[j]-array[j-1]
                if tmp >= 35:
                    verdict = 'yes'
                    e = j
                    break
    return [s,e,verdict]

def BPM_byCounts(array):
    curr = Normilize_Array(array)
    i = 0
    c = 0
    while i < len(curr):
        rise = I_startRise(i, curr)
        if rise[3] == 'yes':
            if curr[i] + rise[2] > 65:
                fall = I_startFall(rise[1], curr)
                if fall[3] == 'yes':
                    c += 1
                    i = fall[1]
        i += 1
    return c*4

def BPM_byReversePulse(array):
    arr = array
    i = 0
    c = 0
    while i < len(arr):
        revers = I_reversePulse(i, arr)
        if revers[2] == 'yes':
            c += 1
            i = revers[1]
        i += 1
    return c * 4

#_____________________GAPS___________________________________#
def I_riseAccurate(i,array):
    verdict = 'no'
    s=i
    e=i
    if i+2 < len(array):
        tmp = array[i+1]-array[i]
        if (tmp >= 7) and (array[i] > array[i+1]):
            verdict = 'yes'
            e = i+2
        else:
            if i+3 < len(array):
                tmp = 0
                tmp += array[i+1]-array[i]
                tmp += array[i + 2] - array[i+1]
                if (tmp >= 7) and (array[i] > array[i+3]):
                    verdict = 'yes'
                    e = i + 3
    return [s,e,verdict]

def BPM_combine(array):
    arr = array
    i = 0
    c = 0
    while i < len(arr) - 5:
        k = i + 5
        j = i
        while j < k:
            pulse = I_reversePulse(j, arr)
            if pulse[2] == 'yes':
                c += 1
                i = pulse[1]
                j = pulse[1]
            else:
                pulse = I_riseAccurate(i, arr)
                if pulse[2] == 'yes':
                    c += 1
                    i = pulse[1]
                    j = pulse[1]
            j += 1
        i += 1
    return c*4

def rejectBPM(bpm):
    if (bpm > 190) or (bpm<35):
        return 1
    return 0

def get_BPM(array):
    arr = array
    bpm_a = BPM_byReversePulse(arr)
    bpm_b = BPM_combine(arr)
    bpm_c = BPM_byCounts(arr)
    finalBPM = bpm_a
    if rejectBPM(bpm_a) == 1:
        finalBPM = bpm_b
        if rejectBPM(bpm_b) == 1:
            finalBPM = bpm_c
    return finalBPM
#___________________CODE_____________________#


for i in range(len(pulALL)):
    print get_BPM(pulALL[i])




i = 0
def GivePetPulse(userName):
    global i
    global pulALL
    print ('sending ',i)
    socketIO.emit('GivePulse', userName, pulALL[i], get_BPM(pulALL[i]))
    if i+1 >= len(pulALL):
        i = 0
    else:
        i += 1

socketIO.on('sendHeartBit0547777777', GivePetPulse)

socketIO.wait(seconds=10000)